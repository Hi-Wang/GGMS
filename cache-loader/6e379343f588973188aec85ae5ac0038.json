{"remainingRequest":"D:\\showU\\GGMS\\node_modules\\babel-loader\\lib\\index.js!D:\\showU\\GGMS\\src\\mock\\article.js","dependencies":[{"path":"D:\\showU\\GGMS\\src\\mock\\article.js","mtime":1533283413464},{"path":"D:\\showU\\GGMS\\.babelrc","mtime":1532942817774},{"path":"D:\\showU\\GGMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1533009214115},{"path":"D:\\showU\\GGMS\\node_modules\\babel-loader\\lib\\index.js","mtime":1530808242000}],"contextDependencies":[],"result":["import _getIterator from 'babel-runtime/core-js/get-iterator';\nimport Mock from 'mockjs';\nimport { param2Obj } from 'assets/js';\n\nvar List = [];\nvar count = 100;\n\nvar baseContent = '<p>我是测试数据我是测试数据</p><p><img src=\"https://wpimg.wallstcn.com/4c69009c-0fd4-4153-b112-6cb53d1cf943\"></p>';\nvar image_uri = 'https://wpimg.wallstcn.com/e4558086-631c-425c-9430-56ffb46e70b3';\n\nfor (var i = 0; i < count; i++) {\n  List.push(Mock.mock({\n    id: '@increment',\n    timestamp: +Mock.Random.date('T'),\n    author: '@first',\n    reviewer: '@first',\n    title: '@title(5, 10)',\n    content_short: '我是测试数据',\n    content: baseContent,\n    forecast: '@float(0, 100, 2, 2)',\n    importance: '@integer(1, 3)',\n    'type|1': ['CN', 'US', 'JP', 'EU'],\n    'status|1': ['published', 'draft', 'deleted'],\n    display_time: '@datetime',\n    comment_disabled: true,\n    pageviews: '@integer(300, 5000)',\n    image_uri: image_uri,\n    platforms: ['a-platform']\n  }));\n}\n\nexport default {\n  getList: function getList(config) {\n    var _param2Obj = param2Obj(config.url),\n        importance = _param2Obj.importance,\n        type = _param2Obj.type,\n        title = _param2Obj.title,\n        _param2Obj$page = _param2Obj.page,\n        page = _param2Obj$page === undefined ? 1 : _param2Obj$page,\n        _param2Obj$limit = _param2Obj.limit,\n        limit = _param2Obj$limit === undefined ? 20 : _param2Obj$limit,\n        sort = _param2Obj.sort;\n\n    var mockList = List.filter(function (item) {\n      if (importance && item.importance !== +importance) return false;\n      if (type && item.type !== type) return false;\n      if (title && item.title.indexOf(title) < 0) return false;\n      return true;\n    });\n\n    if (sort === '-id') {\n      mockList = mockList.reverse();\n    }\n\n    var pageList = mockList.filter(function (item, index) {\n      return index < limit * page && index >= limit * (page - 1);\n    });\n\n    return {\n      total: mockList.length,\n      items: pageList\n    };\n  },\n  getPv: function getPv() {\n    return {\n      pvData: [{ key: 'PC', pv: 1024 }, { key: 'mobile', pv: 1024 }, { key: 'ios', pv: 1024 }, { key: 'android', pv: 1024 }]\n    };\n  },\n  getArticle: function getArticle(config) {\n    var _param2Obj2 = param2Obj(config.url),\n        id = _param2Obj2.id;\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = _getIterator(List), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var article = _step.value;\n\n        if (article.id === +id) {\n          return article;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  },\n  createArticle: function createArticle() {\n    return {\n      data: 'success'\n    };\n  },\n  updateArticle: function updateArticle() {\n    return {\n      data: 'success'\n    };\n  }\n};",{"version":3,"sources":["src\\mock\\article.js"],"names":["Mock","param2Obj","List","count","baseContent","image_uri","i","push","mock","id","timestamp","Random","date","author","reviewer","title","content_short","content","forecast","importance","display_time","comment_disabled","pageviews","platforms","getList","config","url","type","page","limit","sort","mockList","filter","item","indexOf","reverse","pageList","index","total","length","items","getPv","pvData","key","pv","getArticle","article","createArticle","data","updateArticle"],"mappings":"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","file":"article.js","sourceRoot":"D:/showU/GGMS","sourcesContent":["import Mock from 'mockjs'\r\nimport { param2Obj } from 'assets/js'\r\n\r\nconst List = []\r\nconst count = 100\r\n\r\nconst baseContent = '<p>我是测试数据我是测试数据</p><p><img src=\"https://wpimg.wallstcn.com/4c69009c-0fd4-4153-b112-6cb53d1cf943\"></p>'\r\nconst image_uri = 'https://wpimg.wallstcn.com/e4558086-631c-425c-9430-56ffb46e70b3'\r\n\r\nfor (let i = 0; i < count; i++) {\r\n  List.push(Mock.mock({\r\n    id: '@increment',\r\n    timestamp: +Mock.Random.date('T'),\r\n    author: '@first',\r\n    reviewer: '@first',\r\n    title: '@title(5, 10)',\r\n    content_short: '我是测试数据',\r\n    content: baseContent,\r\n    forecast: '@float(0, 100, 2, 2)',\r\n    importance: '@integer(1, 3)',\r\n    'type|1': ['CN', 'US', 'JP', 'EU'],\r\n    'status|1': ['published', 'draft', 'deleted'],\r\n    display_time: '@datetime',\r\n    comment_disabled: true,\r\n    pageviews: '@integer(300, 5000)',\r\n    image_uri,\r\n    platforms: ['a-platform']\r\n  }))\r\n}\r\n\r\nexport default {\r\n  getList: config => {\r\n    const { importance, type, title, page = 1, limit = 20, sort } = param2Obj(config.url)\r\n\r\n    let mockList = List.filter(item => {\r\n      if (importance && item.importance !== +importance) return false\r\n      if (type && item.type !== type) return false\r\n      if (title && item.title.indexOf(title) < 0) return false\r\n      return true\r\n    })\r\n\r\n    if (sort === '-id') {\r\n      mockList = mockList.reverse()\r\n    }\r\n\r\n    const pageList = mockList.filter((item, index) => index < limit * page && index >= limit * (page - 1))\r\n\r\n    return {\r\n      total: mockList.length,\r\n      items: pageList\r\n    }\r\n  },\r\n  getPv: () => ({\r\n    pvData: [{ key: 'PC', pv: 1024 }, { key: 'mobile', pv: 1024 }, { key: 'ios', pv: 1024 }, { key: 'android', pv: 1024 }]\r\n  }),\r\n  getArticle: (config) => {\r\n    const { id } = param2Obj(config.url)\r\n    for (const article of List) {\r\n      if (article.id === +id) {\r\n        return article\r\n      }\r\n    }\r\n  },\r\n  createArticle: () => ({\r\n    data: 'success'\r\n  }),\r\n  updateArticle: () => ({\r\n    data: 'success'\r\n  })\r\n}\r\n"]}]}