{"remainingRequest":"D:\\showU\\GGMS\\node_modules\\babel-loader\\lib\\index.js!D:\\showU\\GGMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\showU\\GGMS\\src\\view\\dashboard\\admin\\components\\LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\showU\\GGMS\\src\\view\\dashboard\\admin\\components\\LineChart.vue","mtime":1533180154492},{"path":"D:\\showU\\GGMS\\.babelrc","mtime":1532942817774},{"path":"D:\\showU\\GGMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1533009214115},{"path":"D:\\showU\\GGMS\\node_modules\\babel-loader\\lib\\index.js","mtime":1530808242000},{"path":"D:\\showU\\GGMS\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport echarts from 'echarts';\nrequire('echarts/theme/macarons'); // echarts theme\n\nexport default {\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '350px'\n    },\n    autoResize: {\n      type: Boolean,\n      default: true\n    },\n    chartData: {\n      type: Object\n    }\n  },\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n  mounted: function mounted() {\n    this.initChart();\n    if (this.autoResize) {}\n    // this.__resizeHanlder = debounce(() => {\n    //   if (this.chart) {\n    //     this.chart.resize()\n    //   }\n    // }, 100)\n    // window.addEventListener('resize', this.__resizeHanlder)\n\n\n    // 监听侧边栏的变化\n    var sidebarElm = document.getElementsByClassName('sidebar-container')[0];\n    // sidebarElm.addEventListener('transitionend', this.__resizeHanlder)\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (!this.chart) {\n      return;\n    }\n    if (this.autoResize) {\n      // window.removeEventListener('resize', this.__resizeHanlder)\n    }\n\n    var sidebarElm = document.getElementsByClassName('sidebar-container')[0];\n    // sidebarElm.removeEventListener('transitionend', this.__resizeHanlder)\n\n    this.chart.dispose();\n    this.chart = null;\n  },\n\n  watch: {\n    chartData: {\n      deep: true,\n      handler: function handler(val) {\n        this.setOptions(val);\n      }\n    }\n  },\n  methods: {\n    setOptions: function setOptions() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          expectedData = _ref.expectedData,\n          actualData = _ref.actualData;\n\n      this.chart.setOption({\n        xAxis: {\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n          boundaryGap: false,\n          axisTick: {\n            show: false\n          }\n        },\n        grid: {\n          left: 10,\n          right: 10,\n          bottom: 20,\n          top: 30,\n          containLabel: true\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross'\n          },\n          padding: [5, 10]\n        },\n        yAxis: {\n          axisTick: {\n            show: false\n          }\n        },\n        legend: {\n          data: ['expected', 'actual']\n        },\n        series: [{\n          name: 'expected', itemStyle: {\n            normal: {\n              color: '#FF005A',\n              lineStyle: {\n                color: '#FF005A',\n                width: 2\n              }\n            }\n          },\n          smooth: true,\n          type: 'line',\n          data: expectedData,\n          animationDuration: 2800,\n          animationEasing: 'cubicInOut'\n        }, {\n          name: 'actual',\n          smooth: true,\n          type: 'line',\n          itemStyle: {\n            normal: {\n              color: '#3888fa',\n              lineStyle: {\n                color: '#3888fa',\n                width: 2\n              },\n              areaStyle: {\n                color: '#f3f8ff'\n              }\n            }\n          },\n          data: actualData,\n          animationDuration: 2800,\n          animationEasing: 'quadraticOut'\n        }]\n      });\n    },\n    initChart: function initChart() {\n      this.chart = echarts.init(this.$el, 'macarons');\n      this.setOptions(this.chartData);\n    }\n  }\n};",{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div :class=\"className\" :style=\"{height:height,width:width}\"></div>\r\n</template>\r\n\r\n<script>\r\nimport echarts from 'echarts'\r\nrequire('echarts/theme/macarons') // echarts theme\r\n\r\nexport default {\r\n  props: {\r\n    className: {\r\n      type: String,\r\n      default: 'chart'\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: '100%'\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '350px'\r\n    },\r\n    autoResize: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    chartData: {\r\n      type: Object\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      chart: null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initChart()\r\n    if (this.autoResize) {\r\n      // this.__resizeHanlder = debounce(() => {\r\n      //   if (this.chart) {\r\n      //     this.chart.resize()\r\n      //   }\r\n      // }, 100)\r\n      // window.addEventListener('resize', this.__resizeHanlder)\r\n    }\r\n\r\n    // 监听侧边栏的变化\r\n    const sidebarElm = document.getElementsByClassName('sidebar-container')[0]\r\n    // sidebarElm.addEventListener('transitionend', this.__resizeHanlder)\r\n  },\r\n  beforeDestroy() {\r\n    if (!this.chart) {\r\n      return\r\n    }\r\n    if (this.autoResize) {\r\n      // window.removeEventListener('resize', this.__resizeHanlder)\r\n    }\r\n\r\n    const sidebarElm = document.getElementsByClassName('sidebar-container')[0]\r\n    // sidebarElm.removeEventListener('transitionend', this.__resizeHanlder)\r\n\r\n    this.chart.dispose()\r\n    this.chart = null\r\n  },\r\n  watch: {\r\n    chartData: {\r\n      deep: true,\r\n      handler(val) {\r\n        this.setOptions(val)\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    setOptions({ expectedData, actualData } = {}) {\r\n      this.chart.setOption({\r\n        xAxis: {\r\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n          boundaryGap: false,\r\n          axisTick: {\r\n            show: false\r\n          }\r\n        },\r\n        grid: {\r\n          left: 10,\r\n          right: 10,\r\n          bottom: 20,\r\n          top: 30,\r\n          containLabel: true\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross'\r\n          },\r\n          padding: [5, 10]\r\n        },\r\n        yAxis: {\r\n          axisTick: {\r\n            show: false\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['expected', 'actual']\r\n        },\r\n        series: [{\r\n          name: 'expected', itemStyle: {\r\n            normal: {\r\n              color: '#FF005A',\r\n              lineStyle: {\r\n                color: '#FF005A',\r\n                width: 2\r\n              }\r\n            }\r\n          },\r\n          smooth: true,\r\n          type: 'line',\r\n          data: expectedData,\r\n          animationDuration: 2800,\r\n          animationEasing: 'cubicInOut'\r\n        },\r\n        {\r\n          name: 'actual',\r\n          smooth: true,\r\n          type: 'line',\r\n          itemStyle: {\r\n            normal: {\r\n              color: '#3888fa',\r\n              lineStyle: {\r\n                color: '#3888fa',\r\n                width: 2\r\n              },\r\n              areaStyle: {\r\n                color: '#f3f8ff'\r\n              }\r\n            }\r\n          },\r\n          data: actualData,\r\n          animationDuration: 2800,\r\n          animationEasing: 'quadraticOut'\r\n        }]\r\n      })\r\n    },\r\n    initChart() {\r\n      this.chart = echarts.init(this.$el, 'macarons')\r\n      this.setOptions(this.chartData)\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src\\view\\dashboard\\admin\\components"}]}