{"remainingRequest":"D:\\showU\\GGMS\\node_modules\\babel-loader\\lib\\index.js!D:\\showU\\GGMS\\src\\assets\\js\\common.js","dependencies":[{"path":"D:\\showU\\GGMS\\src\\assets\\js\\common.js","mtime":1533699233604},{"path":"D:\\showU\\GGMS\\.babelrc","mtime":1532942817774},{"path":"D:\\showU\\GGMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1533288711758},{"path":"D:\\showU\\GGMS\\node_modules\\babel-loader\\lib\\index.js","mtime":1530808242000}],"contextDependencies":[],"result":["import _typeof from 'babel-runtime/helpers/typeof';\nimport _JSON$stringify from 'babel-runtime/core-js/json/stringify';\nvar _arguments = arguments;\n/**\r\n * 公用的方法\r\n */\nimport Cookies from 'js-cookie';\nimport { MessageBox, Message } from 'element-ui';\n\nvar TokenKey = 'Admin-Token';\n\n/**\r\n * 弹框带确认\r\n * title: 弹框的标题\r\n * message： 弹框内容\r\n * type: 弹框类型 success / info / warning / error\r\n */\nvar alertModel = function alertModel(type, title, message) {\n  MessageBox({\n    type: type,\n    title: title,\n    message: message,\n    distinguishCancelAndClose: true,\n    callback: function callback() {\n      setTimeout(function () {\n        MessageBox.close();\n      }, 1000);\n    }\n  });\n};\n\n/**\r\n * 提示框\r\n * message： 弹框内容\r\n * type: 弹框类型 success / info / warning / error\r\n */\nvar promptAlert = function promptAlert(type, message) {\n  Message({\n    type: type,\n    message: message,\n    duration: 2000,\n    showClose: true\n  });\n};\n\n/**\r\n * 获取Token\r\n */\nvar getToken = function getToken() {\n  return Cookies.get(TokenKey);\n};\n\n/**\r\n * 存储Token\r\n */\nvar setToken = function setToken(token) {\n  return Cookies.set(TokenKey, token);\n};\n\n/**\r\n * 删除Token\r\n */\nvar removeToken = function removeToken() {\n  return Cookies.remove(TokenKey);\n};\n\n/**\r\n * 存储localStorage\r\n */\nvar setStore = function setStore(name, content) {\n  if (!name) return;\n  if (typeof content !== 'string') {\n    content = _JSON$stringify(content);\n  }\n  window.localStorage.setItem(name, content);\n};\n\n/**\r\n * 获取localStorage\r\n */\nvar getStore = function getStore(name) {\n  if (!name) return;\n  return window.localStorage.getItem(name);\n};\n\n/**\r\n * 删除localStorage\r\n */\nvar removeStore = function removeStore(name) {\n  if (!name) return;\n  window.localStorage.removeItem(name);\n};\n\n/**\r\n * 验证正整数\r\n */\nvar isuInteger = function isuInteger(num) {\n  if (!/^[1-9]+\\d*$/.test(num)) {\n    return false;\n  }\n  return true;\n};\n\n/**\r\n * 验证手机号\r\n */\nvar isPhone = function isPhone(e) {\n  var integer1 = /^1\\d{10}$/;\n  if (!integer1.test(e)) {\n    return false;\n  }\n  return true;\n};\n\n/**\r\n * 验证邮箱\r\n */\nvar isEmail = function isEmail(e) {\n  var szReg = /^([0-9A-Za-z\\-_\\.]+)@([0-9a-z]+\\.[a-z]{2,3}(\\.[a-z]{2})?)$/;\n  if (!szReg.test(e)) {\n    return false;\n  }\n  return true;\n};\n\n/**\r\n *解析时间戳 \r\n  */\nvar timeToTimeStamp = function timeToTimeStamp(timestamp) {\n  var timestamps = Date.parse(new Date(timestamp));\n  timestamp = timestamps / 1000;\n  return timestamp;\n};\n\n/**\r\n* 判断是否为空\r\n* @param {Object} str\r\n*/\nvar isEmpty = function isEmpty(str) {\n  var retValue = false;\n  try {\n    if (!str || str == \"''\" || str == \"null\" || str == \"{}\" || str == \"[]\" || str == \"'[]'\" || str == \"<null>\" || str.length == 0 || str == \"\") {\n      retValue = true;\n    } else {\n      retValue = false;\n    }\n  } catch (e) {\n    retValue = false;\n  }\n  return retValue;\n};\n\n/**\r\n * 获取cookie\r\n */\nvar getCookie = function getCookie(name) {\n  var arr,\n      reg = new RegExp(\"(^| )\" + name + \"=([^;]*)(;|$)\");\n  if (arr = document.cookie.match(reg)) {\n    return unescape(arr[2]);\n  } else {\n    return null;\n  }\n};\n\n/**\r\n * 用户名验证\r\n */\nvar isvalidUsername = function isvalidUsername(str) {\n  var valid_map = ['admin', 'editor', 'wang'];\n  return valid_map.indexOf(str.trim()) >= 0;\n};\n\n/**\r\n * Url\r\n */\nvar validateURL = function validateURL(textval) {\n  var urlregex = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/;\n  return urlregex.test(textval);\n};\n\n/**\r\n * Email\r\n */\nvar validateEmail = function validateEmail(email) {\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n};\n\n/**\r\n * 小写字母\r\n */\nvar validateLowerCase = function validateLowerCase(str) {\n  var reg = /^[a-z]+$/;\n  return reg.test(str);\n};\n\n/**\r\n *大写字母 \r\n */\nvar validateUpperCase = function validateUpperCase(str) {\n  var reg = /^[A-Z]+$/;\n  return reg.test(str);\n};\n\n/**\r\n *大小写字母 \r\n */\nvar validateAlphabets = function validateAlphabets(str) {\n  var reg = /^[A-Za-z]+$/;\n  return reg.test(str);\n};\n\nvar param2Obj = function param2Obj(url) {\n  var search = url.split('?')[1];\n  if (!search) {\n    return {};\n  }\n  return JSON.parse('{\"' + decodeURIComponent(search).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}');\n};\n\nvar parseTime = function parseTime(time, cFormat) {\n  if (_arguments.length === 0) {\n    return null;\n  }\n  var format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}';\n  var date = void 0;\n  if ((typeof time === 'undefined' ? 'undefined' : _typeof(time)) === 'object') {\n    date = time;\n  } else {\n    if (('' + time).length === 10) time = parseInt(time) * 1000;\n    date = new Date(time);\n  }\n  var formatObj = {\n    y: date.getFullYear(),\n    m: date.getMonth() + 1,\n    d: date.getDate(),\n    h: date.getHours(),\n    i: date.getMinutes(),\n    s: date.getSeconds(),\n    a: date.getDay()\n  };\n  var time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, function (result, key) {\n    var value = formatObj[key];\n    if (key === 'a') return ['一', '二', '三', '四', '五', '六', '日'][value - 1];\n    if (result.length > 0 && value < 10) {\n      value = '0' + value;\n    }\n    return value || 0;\n  });\n  return time_str;\n};\n\nvar formatTime = function formatTime(time, option) {\n  time = +time * 1000;\n  var d = new Date(time);\n  var now = Date.now();\n\n  var diff = (now - d) / 1000;\n\n  if (diff < 30) {\n    return '刚刚';\n  } else if (diff < 3600) {\n    // less 1 hour\n    return Math.ceil(diff / 60) + '分钟前';\n  } else if (diff < 3600 * 24) {\n    return Math.ceil(diff / 3600) + '小时前';\n  } else if (diff < 3600 * 24 * 2) {\n    return '1天前';\n  }\n  if (option) {\n    return parseTime(time, option);\n  } else {\n    return d.getMonth() + 1 + '月' + d.getDate() + '日' + d.getHours() + '时' + d.getMinutes() + '分';\n  }\n};\n\nexport { getToken, setToken, removeToken, setStore, getStore, removeStore, isuInteger, alertModel, promptAlert, timeToTimeStamp, isEmpty, getCookie, isvalidUsername, validateURL, validateEmail, validateLowerCase, validateUpperCase, validateAlphabets, param2Obj, parseTime, formatTime };",{"version":3,"sources":["src\\assets\\js\\common.js"],"names":["Cookies","MessageBox","Message","TokenKey","alertModel","type","title","message","distinguishCancelAndClose","callback","setTimeout","close","promptAlert","duration","showClose","getToken","get","setToken","token","set","removeToken","remove","setStore","name","content","window","localStorage","setItem","getStore","getItem","removeStore","removeItem","isuInteger","num","test","isPhone","integer1","e","isEmail","szReg","timeToTimeStamp","timestamp","timestamps","Date","parse","isEmpty","str","retValue","length","getCookie","arr","reg","RegExp","document","cookie","match","unescape","isvalidUsername","valid_map","indexOf","trim","validateURL","textval","urlregex","validateEmail","email","re","validateLowerCase","validateUpperCase","validateAlphabets","param2Obj","url","search","split","JSON","decodeURIComponent","replace","parseTime","time","cFormat","arguments","format","date","parseInt","formatObj","y","getFullYear","m","getMonth","d","getDate","h","getHours","i","getMinutes","s","getSeconds","a","getDay","time_str","result","key","value","formatTime","option","now","diff","Math","ceil"],"mappings":"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","file":"common.js","sourceRoot":"D:/showU/GGMS","sourcesContent":["/**\r\n * 公用的方法\r\n */\r\nimport Cookies from 'js-cookie'\r\nimport { MessageBox, Message } from 'element-ui' \r\n\r\nconst TokenKey = 'Admin-Token'\r\n\r\n/**\r\n * 弹框带确认\r\n * title: 弹框的标题\r\n * message： 弹框内容\r\n * type: 弹框类型 success / info / warning / error\r\n */ \r\nconst alertModel = ( type, title, message ) => {\r\n  MessageBox({\r\n    type: type,\r\n    title: title,\r\n    message: message,\r\n    distinguishCancelAndClose: true,\r\n    callback: () => {\r\n      setTimeout(() => {\r\n        MessageBox.close()\r\n      },1000)\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * 提示框\r\n * message： 弹框内容\r\n * type: 弹框类型 success / info / warning / error\r\n */ \r\nconst promptAlert = ( type, message ) => {\r\n  Message({\r\n    type: type,\r\n    message: message,\r\n    duration: 2000,\r\n    showClose: true\r\n  })\r\n}\r\n\r\n/**\r\n * 获取Token\r\n */\r\nconst getToken = () => {\r\n  return Cookies.get(TokenKey)\r\n}\r\n\r\n/**\r\n * 存储Token\r\n */\r\nconst setToken = (token) => {\r\n  return Cookies.set(TokenKey, token)\r\n}\r\n\r\n/**\r\n * 删除Token\r\n */\r\nconst removeToken = () => {\r\n  return Cookies.remove(TokenKey)\r\n}\r\n\r\n\r\n/**\r\n * 存储localStorage\r\n */\r\nconst setStore = ( name, content ) => {\r\n    if (!name) return;\r\n    if (typeof content !== 'string') {\r\n      content = JSON.stringify(content);\r\n    }\r\n    window.localStorage.setItem(name, content);\r\n  }\r\n  \r\n/**\r\n * 获取localStorage\r\n */\r\nconst getStore = ( name ) => {\r\n    if (!name) return;\r\n    return window.localStorage.getItem(name);\r\n  }\r\n  \r\n/**\r\n * 删除localStorage\r\n */\r\nconst removeStore = ( name ) => {\r\n    if (!name) return;\r\n    window.localStorage.removeItem(name);\r\n  }\r\n\r\n/**\r\n * 验证正整数\r\n */\r\nconst isuInteger = ( num ) => {\r\n    if (!/^[1-9]+\\d*$/.test(num)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n/**\r\n * 验证手机号\r\n */\r\nconst isPhone= e =>{\r\n    let integer1 = /^1\\d{10}$/;\r\n    if(!integer1.test(e)){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  \r\n/**\r\n * 验证邮箱\r\n */\r\nconst isEmail= ( e ) => {\r\n    let szReg=/^([0-9A-Za-z\\-_\\.]+)@([0-9a-z]+\\.[a-z]{2,3}(\\.[a-z]{2})?)$/;\r\n    if(!szReg.test(e)){\r\n      return false;\r\n    }\r\n    return true;\r\n  }  \r\n\r\n/**\r\n *解析时间戳 \r\n  */ \r\nconst timeToTimeStamp = ( timestamp ) => {\r\n  let timestamps = Date.parse(new Date(timestamp))\r\n  timestamp = timestamps / 1000;\r\n  return timestamp;\r\n}\r\n  \r\n\r\n  /**\r\n\t * 判断是否为空\r\n\t * @param {Object} str\r\n\t */\r\nconst isEmpty = ( str ) => {\r\n  let retValue = false;\r\n  try{\r\n    if(!str || str == \"''\" || str == \"null\" || str == \"{}\" || str == \"[]\" || str == \"'[]'\" || str == \"<null>\" || str.length == 0 || str == \"\"){\r\n      retValue = true;\r\n    } else {\r\n      retValue = false;\r\n    }\r\n  } catch(e) {\r\n    retValue = false;\r\n  }\r\n  return retValue\r\n}\r\n\r\n/**\r\n * 获取cookie\r\n */\r\nconst\tgetCookie = ( name ) =>{\r\n    var arr,reg=new RegExp(\"(^| )\"+name+\"=([^;]*)(;|$)\");  \r\n    if(arr = document.cookie.match(reg)) {\r\n      return unescape(arr[2]);\r\n    } else {\r\n      return null;   \r\n    }\r\n  }\r\n  \r\n/**\r\n * 用户名验证\r\n */\r\nconst isvalidUsername = (str) => {\r\n  const valid_map = ['admin', 'editor', 'wang']\r\n  return valid_map.indexOf(str.trim()) >= 0\r\n}\r\n\r\n/**\r\n * Url\r\n */\r\nconst validateURL = (textval) => {\r\n  const urlregex = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/\r\n  return urlregex.test(textval)\r\n}\r\n\r\n/**\r\n * Email\r\n */ \r\nconst validateEmail = (email) => {\r\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  return re.test(email)\r\n}\r\n\r\n/**\r\n * 小写字母\r\n */\r\nconst validateLowerCase = (str) => {\r\n  const reg = /^[a-z]+$/\r\n  return reg.test(str)\r\n}\r\n\r\n/**\r\n *大写字母 \r\n */\r\nconst validateUpperCase = (str) => {\r\n  const reg = /^[A-Z]+$/\r\n  return reg.test(str)\r\n}\r\n\r\n/**\r\n *大小写字母 \r\n */\r\nconst validateAlphabets = (str) => {\r\n  const reg = /^[A-Za-z]+$/\r\n  return reg.test(str)\r\n}\r\n\r\nconst param2Obj = (url) => {\r\n  const search = url.split('?')[1]\r\n  if (!search) {\r\n    return {}\r\n  }\r\n  return JSON.parse('{\"' + decodeURIComponent(search).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}')\r\n}\r\n\r\nconst parseTime = (time, cFormat) => {\r\n  if (arguments.length === 0) {\r\n    return null\r\n  }\r\n  const format = cFormat || '{y}-{m}-{d} {h}:{i}:{s}'\r\n  let date\r\n  if (typeof time === 'object') {\r\n    date = time\r\n  } else {\r\n    if (('' + time).length === 10) time = parseInt(time) * 1000\r\n    date = new Date(time)\r\n  }\r\n  const formatObj = {\r\n    y: date.getFullYear(),\r\n    m: date.getMonth() + 1,\r\n    d: date.getDate(),\r\n    h: date.getHours(),\r\n    i: date.getMinutes(),\r\n    s: date.getSeconds(),\r\n    a: date.getDay()\r\n  }\r\n  const time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) => {\r\n    let value = formatObj[key]\r\n    if (key === 'a') return ['一', '二', '三', '四', '五', '六', '日'][value - 1]\r\n    if (result.length > 0 && value < 10) {\r\n      value = '0' + value\r\n    }\r\n    return value || 0\r\n  })\r\n  return time_str\r\n}\r\n\r\nconst formatTime = (time, option) => {\r\n  time = +time * 1000\r\n  const d = new Date(time)\r\n  const now = Date.now()\r\n\r\n  const diff = (now - d) / 1000\r\n\r\n  if (diff < 30) {\r\n    return '刚刚'\r\n  } else if (diff < 3600) { // less 1 hour\r\n    return Math.ceil(diff / 60) + '分钟前'\r\n  } else if (diff < 3600 * 24) {\r\n    return Math.ceil(diff / 3600) + '小时前'\r\n  } else if (diff < 3600 * 24 * 2) {\r\n    return '1天前'\r\n  }\r\n  if (option) {\r\n    return parseTime(time, option)\r\n  } else {\r\n    return d.getMonth() + 1 + '月' + d.getDate() + '日' + d.getHours() + '时' + d.getMinutes() + '分'\r\n  }\r\n}\r\n\r\n  export {\r\n    getToken,\r\n    setToken,\r\n    removeToken,\r\n    setStore,\r\n    getStore,\r\n    removeStore,\r\n    isuInteger,\r\n    alertModel,\r\n    promptAlert,\r\n    timeToTimeStamp,\r\n    isEmpty,\r\n    getCookie,\r\n    isvalidUsername,\r\n    validateURL,\r\n    validateEmail,\r\n    validateLowerCase,\r\n    validateUpperCase,\r\n    validateAlphabets,\r\n    param2Obj,\r\n    parseTime,\r\n    formatTime\r\n  }"]}]}