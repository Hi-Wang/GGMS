{"remainingRequest":"D:\\showU\\GGMS\\node_modules\\babel-loader\\lib\\index.js!D:\\showU\\GGMS\\node_modules\\eslint-loader\\index.js??ref--1!D:\\showU\\GGMS\\src\\view\\layout\\mixin\\ResizeHandler.js","dependencies":[{"path":"D:\\showU\\GGMS\\src\\view\\layout\\mixin\\ResizeHandler.js","mtime":1534754260593},{"path":"D:\\showU\\GGMS\\.babelrc","mtime":1532942817774},{"path":"D:\\showU\\GGMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1533288711758},{"path":"D:\\showU\\GGMS\\node_modules\\babel-loader\\lib\\index.js","mtime":1530808242000},{"path":"D:\\showU\\GGMS\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import store from '@/store';\n\nvar _document = document,\n    body = _document.body;\n\nvar WIDTH = 1024;\nvar RATIO = 3;\n\nexport default {\n  watch: {\n    $route: function $route() {\n      if (this.device === 'mobile' && this.sidebar.opened) {\n        store.dispatch('closeSideBar', { withoutAnimation: false });\n      }\n    }\n  },\n  beforeMount: function beforeMount() {\n    window.addEventListener('resize', this.resizeHandler);\n  },\n  mounted: function mounted() {\n    var isMobile = this.isMobile();\n    if (isMobile) {\n      store.dispatch('toggleDevice', 'mobile');\n      store.dispatch('closeSideBar', { withoutAnimation: true });\n    }\n  },\n\n  methods: {\n    isMobile: function isMobile() {\n      var rect = body.getBoundingClientRect();\n      return rect.width - RATIO < WIDTH;\n    },\n    resizeHandler: function resizeHandler() {\n      if (!document.hidden) {\n        var isMobile = this.isMobile();\n        store.dispatch('toggleDevice', isMobile ? 'mobile' : 'desktop');\n\n        if (isMobile) {\n          store.dispatch('closeSideBar', { withoutAnimation: true });\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["src\\view\\layout\\mixin\\ResizeHandler.js"],"names":["store","document","body","WIDTH","RATIO","watch","$route","device","sidebar","opened","dispatch","withoutAnimation","beforeMount","window","addEventListener","resizeHandler","mounted","isMobile","methods","rect","getBoundingClientRect","width","hidden"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;;gBAEiBC,Q;IAATC,I,aAAAA,I;;AACR,IAAMC,QAAQ,IAAd;AACA,IAAMC,QAAQ,CAAd;;AAEA,eAAe;AACbC,SAAO;AACLC,UADK,oBACI;AACP,UAAI,KAAKC,MAAL,KAAgB,QAAhB,IAA4B,KAAKC,OAAL,CAAaC,MAA7C,EAAqD;AACnDT,cAAMU,QAAN,CAAe,cAAf,EAA+B,EAAEC,kBAAkB,KAApB,EAA/B;AACD;AACF;AALI,GADM;AAQbC,aARa,yBAQC;AACZC,WAAOC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,aAAvC;AACD,GAVY;AAWbC,SAXa,qBAWH;AACR,QAAMC,WAAW,KAAKA,QAAL,EAAjB;AACA,QAAIA,QAAJ,EAAc;AACZjB,YAAMU,QAAN,CAAe,cAAf,EAA+B,QAA/B;AACAV,YAAMU,QAAN,CAAe,cAAf,EAA+B,EAAEC,kBAAkB,IAApB,EAA/B;AACD;AACF,GAjBY;;AAkBbO,WAAS;AACPD,YADO,sBACI;AACT,UAAME,OAAOjB,KAAKkB,qBAAL,EAAb;AACA,aAAOD,KAAKE,KAAL,GAAajB,KAAb,GAAqBD,KAA5B;AACD,KAJM;AAKPY,iBALO,2BAKS;AACd,UAAI,CAACd,SAASqB,MAAd,EAAsB;AACpB,YAAML,WAAW,KAAKA,QAAL,EAAjB;AACAjB,cAAMU,QAAN,CAAe,cAAf,EAA+BO,WAAW,QAAX,GAAsB,SAArD;;AAEA,YAAIA,QAAJ,EAAc;AACZjB,gBAAMU,QAAN,CAAe,cAAf,EAA+B,EAAEC,kBAAkB,IAApB,EAA/B;AACD;AACF;AACF;AAdM;AAlBI,CAAf","file":"ResizeHandler.js","sourceRoot":"D:/showU/GGMS","sourcesContent":["import store from '@/store';\r\n\r\nconst { body } = document;\r\nconst WIDTH = 1024;\r\nconst RATIO = 3;\r\n\r\nexport default {\r\n  watch: {\r\n    $route() {\r\n      if (this.device === 'mobile' && this.sidebar.opened) {\r\n        store.dispatch('closeSideBar', { withoutAnimation: false });\r\n      }\r\n    }\r\n  },\r\n  beforeMount() {\r\n    window.addEventListener('resize', this.resizeHandler);\r\n  },\r\n  mounted() {\r\n    const isMobile = this.isMobile();\r\n    if (isMobile) {\r\n      store.dispatch('toggleDevice', 'mobile');\r\n      store.dispatch('closeSideBar', { withoutAnimation: true });\r\n    }\r\n  },\r\n  methods: {\r\n    isMobile() {\r\n      const rect = body.getBoundingClientRect();\r\n      return rect.width - RATIO < WIDTH;\r\n    },\r\n    resizeHandler() {\r\n      if (!document.hidden) {\r\n        const isMobile = this.isMobile();\r\n        store.dispatch('toggleDevice', isMobile ? 'mobile' : 'desktop');\r\n\r\n        if (isMobile) {\r\n          store.dispatch('closeSideBar', { withoutAnimation: true });\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n"]}]}