{"remainingRequest":"D:\\showU\\GGMS\\node_modules\\babel-loader\\lib\\index.js!D:\\showU\\GGMS\\src\\assets\\js\\request.js","dependencies":[{"path":"D:\\showU\\GGMS\\src\\assets\\js\\request.js","mtime":1533539387344},{"path":"D:\\showU\\GGMS\\.babelrc","mtime":1532942817774},{"path":"D:\\showU\\GGMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1533288711758},{"path":"D:\\showU\\GGMS\\node_modules\\babel-loader\\lib\\index.js","mtime":1530808242000}],"contextDependencies":[],"result":["import _Promise from 'babel-runtime/core-js/promise';\nimport axios from 'axios';\nimport { Message } from 'element-ui';\nimport store from 'store';\nimport { getToken } from 'assets/js/common';\n\n// create an axios instance\nvar service = axios.create({\n  baseURL: process.env.BASE_API, // api的base_url \n  timeout: 5000 // request timeout\n});\n\n// request interceptor\nservice.interceptors.request.use(function (config) {\n  // Do something before request is sent\n  if (store.getters.token) {\n    // 让每个请求携带token-- ['X-Token']为自定义key 请根据实际情况自行修改\n    config.headers['X-Token'] = getToken();\n  }\n  return config;\n}, function (error) {\n  // Do something with request error\n  console.log(error); // for debug\n  _Promise.reject(error);\n});\n\n// respone interceptor\nservice.interceptors.response.use(function (response) {\n  return response;\n},\n/**\r\n * 下面的注释为通过在response里，自定义code来标示请求状态\r\n * 当code返回如下情况则说明权限有问题，登出并返回到登录页\r\n * 如想通过xmlhttprequest来状态码标识 逻辑可写在下面error中\r\n * 以下代码均为样例，请结合自生需求加以修改，若不需要，则可删除\r\n */\n// response => {\n//   const res = response.data\n//   if (res.code !== 20000) {\n//     Message({\n//       message: res.message,\n//       type: 'error',\n//       duration: 5 * 1000\n//     })\n//     // 50008:非法的token; 50012:其他客户端登录了;  50014:Token 过期了;\n//     if (res.code === 50008 || res.code === 50012 || res.code === 50014) {\n//       // 请自行在引入 MessageBox\n//       // import { Message, MessageBox } from 'element-ui'\n//       MessageBox.confirm('你已被登出，可以取消继续留在该页面，或者重新登录', '确定登出', {\n//         confirmButtonText: '重新登录',\n//         cancelButtonText: '取消',\n//         type: 'warning'\n//       }).then(() => {\n//         store.dispatch('FedLogOut').then(() => {\n//           location.reload() // 为了重新实例化vue-router对象 避免bug\n//         })\n//       })\n//     }\n//     return Promise.reject('error')\n//   } else {\n//     return response.data\n//   }\n// },\nfunction (error) {\n  console.log('err' + error); // for debug\n  Message({\n    message: error.message,\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return _Promise.reject(error);\n});\n\nexport default service;",{"version":3,"sources":["src\\assets\\js\\request.js"],"names":["axios","Message","store","getToken","service","create","baseURL","process","env","BASE_API","timeout","interceptors","request","use","getters","token","config","headers","console","log","error","reject","response","message","type","duration"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA;AACA,IAAMC,UAAUJ,MAAMK,MAAN,CAAa;AAC3BC,WAASC,QAAQC,GAAR,CAAYC,QADM,EACI;AAC/BC,WAAS,IAFkB,CAEb;AAFa,CAAb,CAAhB;;AAKA;AACAN,QAAQO,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiC,kBAAU;AACzC;AACA,MAAIX,MAAMY,OAAN,CAAcC,KAAlB,EAAyB;AACvB;AACAC,WAAOC,OAAP,CAAe,SAAf,IAA4Bd,UAA5B;AACD;AACD,SAAOa,MAAP;AACD,CAPD,EAOG,iBAAS;AACV;AACAE,UAAQC,GAAR,CAAYC,KAAZ,EAFU,CAES;AACnB,WAAQC,MAAR,CAAeD,KAAf;AACD,CAXD;;AAaA;AACAhB,QAAQO,YAAR,CAAqBW,QAArB,CAA8BT,GAA9B,CACE;AAAA,SAAYS,QAAZ;AAAA,CADF;AAEE;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAS;AACPJ,UAAQC,GAAR,CAAY,QAAQC,KAApB,EADO,CACoB;AAC3BnB,UAAQ;AACNsB,aAASH,MAAMG,OADT;AAENC,UAAM,OAFA;AAGNC,cAAU,IAAI;AAHR,GAAR;AAKA,SAAO,SAAQJ,MAAR,CAAeD,KAAf,CAAP;AACD,CA3CH;;AA6CA,eAAehB,OAAf","file":"request.js","sourceRoot":"D:/showU/GGMS","sourcesContent":["import axios from 'axios'\r\nimport { Message } from 'element-ui'\r\nimport store from 'store'\r\nimport { getToken } from 'assets/js/common'\r\n\r\n// create an axios instance\r\nconst service = axios.create({\r\n  baseURL: process.env.BASE_API, // api的base_url \r\n  timeout: 5000 // request timeout\r\n})\r\n\r\n// request interceptor\r\nservice.interceptors.request.use(config => {\r\n  // Do something before request is sent\r\n  if (store.getters.token) {\r\n    // 让每个请求携带token-- ['X-Token']为自定义key 请根据实际情况自行修改\r\n    config.headers['X-Token'] = getToken()\r\n  }\r\n  return config\r\n}, error => {\r\n  // Do something with request error\r\n  console.log(error) // for debug\r\n  Promise.reject(error)\r\n})\r\n\r\n// respone interceptor\r\nservice.interceptors.response.use(\r\n  response => response,\r\n  /**\r\n   * 下面的注释为通过在response里，自定义code来标示请求状态\r\n   * 当code返回如下情况则说明权限有问题，登出并返回到登录页\r\n   * 如想通过xmlhttprequest来状态码标识 逻辑可写在下面error中\r\n   * 以下代码均为样例，请结合自生需求加以修改，若不需要，则可删除\r\n   */\r\n  // response => {\r\n  //   const res = response.data\r\n  //   if (res.code !== 20000) {\r\n  //     Message({\r\n  //       message: res.message,\r\n  //       type: 'error',\r\n  //       duration: 5 * 1000\r\n  //     })\r\n  //     // 50008:非法的token; 50012:其他客户端登录了;  50014:Token 过期了;\r\n  //     if (res.code === 50008 || res.code === 50012 || res.code === 50014) {\r\n  //       // 请自行在引入 MessageBox\r\n  //       // import { Message, MessageBox } from 'element-ui'\r\n  //       MessageBox.confirm('你已被登出，可以取消继续留在该页面，或者重新登录', '确定登出', {\r\n  //         confirmButtonText: '重新登录',\r\n  //         cancelButtonText: '取消',\r\n  //         type: 'warning'\r\n  //       }).then(() => {\r\n  //         store.dispatch('FedLogOut').then(() => {\r\n  //           location.reload() // 为了重新实例化vue-router对象 避免bug\r\n  //         })\r\n  //       })\r\n  //     }\r\n  //     return Promise.reject('error')\r\n  //   } else {\r\n  //     return response.data\r\n  //   }\r\n  // },\r\n  error => {\r\n    console.log('err' + error) // for debug\r\n    Message({\r\n      message: error.message,\r\n      type: 'error',\r\n      duration: 5 * 1000\r\n    })\r\n    return Promise.reject(error)\r\n  })\r\n\r\nexport default service\r\n"]}]}