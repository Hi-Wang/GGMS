{"remainingRequest":"D:\\showU\\GGMS\\node_modules\\babel-loader\\lib\\index.js!D:\\showU\\GGMS\\src\\permission.js","dependencies":[{"path":"D:\\showU\\GGMS\\src\\permission.js","mtime":1534411878964},{"path":"D:\\showU\\GGMS\\.babelrc","mtime":1532942817774},{"path":"D:\\showU\\GGMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1533288711758},{"path":"D:\\showU\\GGMS\\node_modules\\babel-loader\\lib\\index.js","mtime":1530808242000}],"contextDependencies":[],"result":["import _extends from 'babel-runtime/helpers/extends';\nimport router from './router';\nimport store from './store';\nimport { Message } from 'element-ui';\nimport NProgress from 'nprogress'; //进度条\nimport 'nprogress/nprogress.css';\nimport { getToken } from 'assets/js/common';\n\nNProgress.configure({ showSpinner: false });\n\n// permission judge function\nfunction hasPermission(roles, permissionRoles) {\n  if (roles.indexOf('admin') >= 0) return true; // admin permission passed directly\n  if (!permissionRoles) return true;\n  return roles.some(function (role) {\n    return permissionRoles.indexOf(role) >= 0;\n  });\n}\n\nvar whiteList = ['/login', '/authredirect'];\n\nrouter.beforeEach(function (to, from, next) {\n  NProgress.start(); // start progress bar\n  if (getToken()) {\n    // determine if there has token\n    /* has token*/\n    if (to.path === '/login') {\n      next({ path: '/' });\n      NProgress.done(); // if current page is dashboard will not trigger\tafterEach hook, so manually handle it\n    } else {\n      if (store.getters.roles.length === 0) {\n        // 判断当前用户是否已拉取完user_info信息\n        store.dispatch('GetUserInfo').then(function (res) {\n          // 拉取user_info\n          var roles = res.data.roles; // note: roles must be a array! such as: ['editor','develop']\n          store.dispatch('GenerateRoutes', { roles: roles }).then(function () {\n            // 根据roles权限生成可访问的路由表\n            router.addRoutes(store.getters.addRouters); // 动态添加可访问路由表\n            next(_extends({}, to, { replace: true })); // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record\n          });\n        }).catch(function (err) {\n          store.dispatch('FedLogOut').then(function () {\n            Message.error(err || 'Verification failed, please login again');\n            next({ path: '/' });\n          });\n        });\n      } else {\n        if (hasPermission(store.getters.roles, to.meta.roles)) {\n          next();\n        } else {\n          next({ path: '/404', replace: true, query: { noGoBack: true } });\n        }\n      }\n    }\n  } else {\n    /* has no token*/\n    if (whiteList.indexOf(to.path) !== -1) {\n      next();\n    } else {\n      next('/login'); // 否则全部重定向到登录页\n    }\n  }\n});\n\nrouter.afterEach(function () {\n  NProgress.done(); // finish progress bar\n});",{"version":3,"sources":["src\\permission.js"],"names":["router","store","Message","NProgress","getToken","configure","showSpinner","hasPermission","roles","permissionRoles","indexOf","some","role","whiteList","beforeEach","to","from","next","start","path","done","getters","length","dispatch","then","res","data","addRoutes","addRouters","replace","catch","err","error","meta","query","noGoBack","afterEach"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CAAkC;AAClC,OAAO,yBAAP;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEAD,UAAUE,SAAV,CAAoB,EAAEC,aAAa,KAAf,EAApB;;AAEA;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,eAA9B,EAA+C;AAC7C,MAAID,MAAME,OAAN,CAAc,OAAd,KAA0B,CAA9B,EAAiC,OAAO,IAAP,CADY,CACA;AAC7C,MAAI,CAACD,eAAL,EAAsB,OAAO,IAAP;AACtB,SAAOD,MAAMG,IAAN,CAAW;AAAA,WAAQF,gBAAgBC,OAAhB,CAAwBE,IAAxB,KAAiC,CAAzC;AAAA,GAAX,CAAP;AACD;;AAED,IAAMC,YAAY,CAAC,QAAD,EAAW,eAAX,CAAlB;;AAEAb,OAAOc,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpCd,YAAUe,KAAV,GADoC,CAClB;AAClB,MAAId,UAAJ,EAAgB;AAAE;AAChB;AACA,QAAIW,GAAGI,IAAH,KAAY,QAAhB,EAA0B;AACxBF,WAAK,EAAEE,MAAM,GAAR,EAAL;AACAhB,gBAAUiB,IAAV,GAFwB,CAEP;AAClB,KAHD,MAGO;AACL,UAAInB,MAAMoB,OAAN,CAAcb,KAAd,CAAoBc,MAApB,KAA+B,CAAnC,EAAsC;AAAE;AACtCrB,cAAMsB,QAAN,CAAe,aAAf,EAA8BC,IAA9B,CAAmC,eAAO;AAAE;AAC1C,cAAMhB,QAAQiB,IAAIC,IAAJ,CAASlB,KAAvB,CADwC,CACX;AAC7BP,gBAAMsB,QAAN,CAAe,gBAAf,EAAiC,EAAEf,YAAF,EAAjC,EAA4CgB,IAA5C,CAAiD,YAAM;AAAE;AACvDxB,mBAAO2B,SAAP,CAAiB1B,MAAMoB,OAAN,CAAcO,UAA/B,EADqD,CACV;AAC3CX,8BAAUF,EAAV,IAAcc,SAAS,IAAvB,KAFqD,CAEtB;AAChC,WAHD;AAID,SAND,EAMGC,KANH,CAMS,UAACC,GAAD,EAAS;AAChB9B,gBAAMsB,QAAN,CAAe,WAAf,EAA4BC,IAA5B,CAAiC,YAAM;AACrCtB,oBAAQ8B,KAAR,CAAcD,OAAO,yCAArB;AACAd,iBAAK,EAAEE,MAAM,GAAR,EAAL;AACD,WAHD;AAID,SAXD;AAYD,OAbD,MAaO;AACL,YAAIZ,cAAcN,MAAMoB,OAAN,CAAcb,KAA5B,EAAmCO,GAAGkB,IAAH,CAAQzB,KAA3C,CAAJ,EAAuD;AACrDS;AACD,SAFD,MAEO;AACLA,eAAK,EAAEE,MAAM,MAAR,EAAgBU,SAAS,IAAzB,EAA+BK,OAAO,EAAEC,UAAU,IAAZ,EAAtC,EAAL;AACD;AACF;AACF;AACF,GA3BD,MA2BO;AACL;AACA,QAAItB,UAAUH,OAAV,CAAkBK,GAAGI,IAArB,MAA+B,CAAC,CAApC,EAAuC;AACrCF;AACD,KAFD,MAEO;AACLA,WAAK,QAAL,EADK,CACU;AAChB;AACF;AACF,CArCD;;AAuCAjB,OAAOoC,SAAP,CAAiB,YAAM;AACrBjC,YAAUiB,IAAV,GADqB,CACJ;AAClB,CAFD","file":"permission.js","sourceRoot":"D:/showU/GGMS","sourcesContent":["import router from './router'\r\nimport store from './store'\r\nimport { Message } from 'element-ui'\r\nimport NProgress from 'nprogress' //进度条\r\nimport 'nprogress/nprogress.css'\r\nimport { getToken } from 'assets/js/common'\r\n\r\nNProgress.configure({ showSpinner: false })\r\n\r\n// permission judge function\r\nfunction hasPermission(roles, permissionRoles) {\r\n  if (roles.indexOf('admin') >= 0) return true // admin permission passed directly\r\n  if (!permissionRoles) return true\r\n  return roles.some(role => permissionRoles.indexOf(role) >= 0)\r\n}\r\n\r\nconst whiteList = ['/login', '/authredirect']\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  NProgress.start() // start progress bar\r\n  if (getToken()) { // determine if there has token\r\n    /* has token*/\r\n    if (to.path === '/login') {\r\n      next({ path: '/' })\r\n      NProgress.done() // if current page is dashboard will not trigger\tafterEach hook, so manually handle it\r\n    } else {\r\n      if (store.getters.roles.length === 0) { // 判断当前用户是否已拉取完user_info信息\r\n        store.dispatch('GetUserInfo').then(res => { // 拉取user_info\r\n          const roles = res.data.roles // note: roles must be a array! such as: ['editor','develop']\r\n          store.dispatch('GenerateRoutes', { roles }).then(() => { // 根据roles权限生成可访问的路由表\r\n            router.addRoutes(store.getters.addRouters) // 动态添加可访问路由表\r\n            next({ ...to, replace: true }) // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record\r\n          })\r\n        }).catch((err) => {\r\n          store.dispatch('FedLogOut').then(() => {\r\n            Message.error(err || 'Verification failed, please login again')\r\n            next({ path: '/' })\r\n          })\r\n        })\r\n      } else {\r\n        if (hasPermission(store.getters.roles, to.meta.roles)) {\r\n          next()\r\n        } else {\r\n          next({ path: '/404', replace: true, query: { noGoBack: true }})\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    /* has no token*/\r\n    if (whiteList.indexOf(to.path) !== -1) { \r\n      next()\r\n    } else {\r\n      next('/login') // 否则全部重定向到登录页\r\n    }\r\n  }\r\n})\r\n\r\nrouter.afterEach(() => {\r\n  NProgress.done() // finish progress bar\r\n})\r\n"]}]}